{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n    form: document.querySelector(\".form\"),\n    input: document.querySelector(\"input[name='delay']\"),\n    inputs: document.querySelectorAll(\"input[name='state']\"),\n}\n\nconst { form, input, inputs } = refs;\n\nlet delay = 0;\ninput.addEventListener('input', (evt) => {\n    delay = Number(evt.currentTarget.value);\n});\n\nlet promiseStatus = \"fulfilled\";\ninputs.forEach(input => {\n    input.addEventListener('change', (evt) => {\n        promiseStatus = evt.currentTarget.value;\n    });\n});\n\nconst promiseGenerator = () => {\n    const delayValue = delay;\n    const status = promiseStatus || \"fulfilled\";\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (status === \"fulfilled\") {\n                resolve(`${delayValue}`);\n            } else if(status === \"rejected\") {\n                reject(`${delayValue}`);\n            } else {\n                reject(\"Unknown promise status\");\n            }\n        }, delay)\n    });\n}\n\nconst handleSubmit = (evt) => {\n    evt.preventDefault();\n    promiseGenerator()\n        .then(value => iziToast.success({\n            title: 'OK',\n            message: `Fulfilled promise in ${value}ms`,\n            messageColor: '#fff',\n            titleSize: '16px',\n            backgroundColor: '#59a10d',\n            position: 'topRight',\n            titleColor: '#fff',\n            theme: 'dark',\n}))\n        .catch(error => iziToast.error({\n            title: 'Error',\n            message: `Rejected promise in ${error}ms`,\n            messageColor: '#fff',\n            titleSize: '16px',\n            backgroundColor: '#ef4040',\n            position: 'topRight',\n            titleColor: '#fff',\n            theme: 'dark',\n}));\n    form.reset();\n};\nform.addEventListener('submit', handleSubmit);"],"names":["refs","form","input","inputs","delay","evt","promiseStatus","promiseGenerator","delayValue","status","resolve","reject","handleSubmit","value","iziToast","error"],"mappings":"mIAGA,MAAMA,EAAO,CACT,KAAM,SAAS,cAAc,OAAO,EACpC,MAAO,SAAS,cAAc,qBAAqB,EACnD,OAAQ,SAAS,iBAAiB,qBAAqB,CAC3D,EAEM,CAAE,KAAAC,EAAM,MAAAC,EAAO,OAAAC,CAAM,EAAKH,EAEhC,IAAII,EAAQ,EACZF,EAAM,iBAAiB,QAAUG,GAAQ,CACrCD,EAAQ,OAAOC,EAAI,cAAc,KAAK,CAC1C,CAAC,EAED,IAAIC,EAAgB,YACpBH,EAAO,QAAQD,GAAS,CACpBA,EAAM,iBAAiB,SAAWG,GAAQ,CACtCC,EAAgBD,EAAI,cAAc,KAC1C,CAAK,CACL,CAAC,EAED,MAAME,EAAmB,IAAM,CAC3B,MAAMC,EAAaJ,EACbK,EAASH,GAAiB,YAChC,OAAO,IAAI,QAAQ,CAACI,EAASC,IAAW,CACpC,WAAW,IAAM,CACTF,IAAW,YACXC,EAAQ,GAAGF,CAAU,EAAE,EAEvBG,EADMF,IAAW,WACV,GAAGD,CAAU,GAEb,wBAFe,CAI7B,EAAEJ,CAAK,CAChB,CAAK,CACL,EAEMQ,EAAgBP,GAAQ,CAC1BA,EAAI,eAAc,EAClBE,EAAkB,EACb,KAAKM,GAASC,EAAS,QAAQ,CAC5B,MAAO,KACP,QAAS,wBAAwBD,CAAK,KACtC,aAAc,OACd,UAAW,OACX,gBAAiB,UACjB,SAAU,WACV,WAAY,OACZ,MAAO,MACnB,CAAC,CAAC,EACO,MAAME,GAASD,EAAS,MAAM,CAC3B,MAAO,QACP,QAAS,uBAAuBC,CAAK,KACrC,aAAc,OACd,UAAW,OACX,gBAAiB,UACjB,SAAU,WACV,WAAY,OACZ,MAAO,MACnB,CAAC,CAAC,EACEd,EAAK,MAAK,CACd,EACAA,EAAK,iBAAiB,SAAUW,CAAY"}