{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n    form: document.querySelector(\".form\"),\n    input: document.querySelector(\"input[name='delay']\"),\n    inputFulfilled: document.querySelector(\"input[value='fulfilled']\"),\n    inputRejected: document.querySelector(\"input[value='rejected']\"),\n    button: document.querySelector(\"button[type='submit']\"),\n}\n\nconst { form, input, inputFulfilled, inputRejected, button } = refs;\n\nlet delay = 0;\ninput.addEventListener('input', (evt) => {\n    delay = Number(evt.currentTarget.value);\n});\n\nlet promiceStatus = \"\";\ninputFulfilled.addEventListener('change', (evt) => {\n    promiceStatus = evt.currentTarget.getAttribute(\"value\");\n})\n\ninputRejected.addEventListener('change', (evt) => {\n    promiceStatus = evt.currentTarget.getAttribute(\"value\");\n})\n\nconst promiceGenerator = () => {\n    const delayValue = delay;\n    const status = promiceStatus;\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (status === \"fulfilled\") {\n                resolve(`${delayValue}`);\n            } else {\n                reject(`${delayValue}`);\n            }\n        }, delay)\n    });\n}\n\nconst handleSubmit = (evt) => {\n    evt.preventDefault();\n    promiceGenerator()\n        .then(value => iziToast.success({\n            iconUrl: \"./public/bi_check2-circle.png\",\n            title: 'OK',\n            message: `Fulfilled promise in ${value}ms`,\n            messageColor: '#fff',\n            titleSize: '16px',\n            backgroundColor: '#59a10d',\n            position: 'topRight',\n            titleColor: '#fff',\n            iconColor: '#fff',\n}))\n        .catch(error => iziToast.warning({\n            iconUrl: \"../public/bi_x-octagon.png\",\n            title: 'Error',\n            message: `Rejected promise in ${error}ms`,\n            messageColor: '#fff',\n            titleSize: '16px',\n            backgroundColor: '#ef4040',\n            position: 'topRight',\n            titleColor: '#fff',\n            iconColor: '#fff',\n\n}));\n    form.reset();\n};\nform.addEventListener('submit', handleSubmit);"],"names":["refs","form","input","inputFulfilled","inputRejected","button","delay","evt","promiceStatus","promiceGenerator","delayValue","status","resolve","reject","handleSubmit","value","iziToast","error"],"mappings":"wIAGA,MAAMA,EAAO,CACT,KAAM,SAAS,cAAc,OAAO,EACpC,MAAO,SAAS,cAAc,qBAAqB,EACnD,eAAgB,SAAS,cAAc,0BAA0B,EACjE,cAAe,SAAS,cAAc,yBAAyB,EAC/D,OAAQ,SAAS,cAAc,uBAAuB,CAC1D,EAEM,CAAE,KAAAC,EAAM,MAAAC,EAAO,eAAAC,EAAgB,cAAAC,EAAe,OAAAC,CAAQ,EAAGL,EAE/D,IAAIM,EAAQ,EACZJ,EAAM,iBAAiB,QAAUK,GAAQ,CACrCD,EAAQ,OAAOC,EAAI,cAAc,KAAK,CAC1C,CAAC,EAED,IAAIC,EAAgB,GACpBL,EAAe,iBAAiB,SAAWI,GAAQ,CAC/CC,EAAgBD,EAAI,cAAc,aAAa,OAAO,CAC1D,CAAC,EAEDH,EAAc,iBAAiB,SAAWG,GAAQ,CAC9CC,EAAgBD,EAAI,cAAc,aAAa,OAAO,CAC1D,CAAC,EAED,MAAME,EAAmB,IAAM,CAC3B,MAAMC,EAAaJ,EACbK,EAASH,EACf,OAAO,IAAI,QAAQ,CAACI,EAASC,IAAW,CACpC,WAAW,IAAM,CACTF,IAAW,YACXC,EAAQ,GAAGF,CAAU,EAAE,EAEvBG,EAAO,GAAGH,CAAU,EAAE,CAE7B,EAAEJ,CAAK,CAChB,CAAK,CACL,EAEMQ,EAAgBP,GAAQ,CAC1BA,EAAI,eAAc,EAClBE,EAAkB,EACb,KAAKM,GAASC,EAAS,QAAQ,CAC5B,QAAS,gCACT,MAAO,KACP,QAAS,wBAAwBD,CAAK,KACtC,aAAc,OACd,UAAW,OACX,gBAAiB,UACjB,SAAU,WACV,WAAY,OACZ,UAAW,MACvB,CAAC,CAAC,EACO,MAAME,GAASD,EAAS,QAAQ,CAC7B,QAAS,6BACT,MAAO,QACP,QAAS,uBAAuBC,CAAK,KACrC,aAAc,OACd,UAAW,OACX,gBAAiB,UACjB,SAAU,WACV,WAAY,OACZ,UAAW,MAEvB,CAAC,CAAC,EACEhB,EAAK,MAAK,CACd,EACAA,EAAK,iBAAiB,SAAUa,CAAY"}